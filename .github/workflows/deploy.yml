name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: ***REMOVED_ACR_URL***
  CONTAINER_APP_NAME: videoqna-ltw
  RESOURCE_GROUP: ***REMOVED_RESOURCE_GROUP***

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Log in to Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.AZURE_CONTAINER_REGISTRY }}/videoqna-ltw:${{ github.sha }} .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/videoqna-ltw:${{ github.sha }}
    
    - name: Deploy to Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        appSourcePath: ${{ github.workspace }}
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        resourceGroup: ${{ env.RESOURCE_GROUP }}
        imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/videoqna-ltw:${{ github.sha }}
        containerAppEnvironment: videoqna-env
        targetPort: 5000
        ingress: external
        environmentVariables: |
          FLASK_ENV=production
          PYTHONPATH=/app
          LANGUAGE_MODEL=openai
          PROMPT_CONTENT_DB=azure_search
        secretVariables: |
          AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_SEARCH_KEY=${{ secrets.AZURE_SEARCH_KEY }}
          AZURE_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}